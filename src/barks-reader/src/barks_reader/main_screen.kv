<BarButton@ActionButton>:
    mipmap: True
    draggable: False

# Helper function to create a checkbox row
<CheckBoxRow@BoxLayout>:
    orientation: 'horizontal'
    size_hint_y: None
    height: dp(20)
    spacing: dp(10)
    label_text: ""
    theme_enum: None  # property to hold the ImageThemes enum
    active: True
    CheckBox:
        size_hint_x: None
        width: dp(40)
        active: self.parent.active
        on_active:
            self.parent.active = self.active
            app._main_screen.on_checkbox_row_changed(self.parent)
    Label:
        text: self.parent.label_text
        bold: True
        text_size: self.size
        halign: 'left'
        valign: 'middle'


<BackgroundColor@Widget>
    background_color: (1, 1, 1, 1)
    sizing_factor_x: 1
    sizing_factor_y: 1
    canvas.before:
        Color:
            rgba: self.background_color
        Rectangle:
            size: self.sizing_factor_x * self.size[0], self.sizing_factor_y * self.size[1]
            pos:
                self.pos[0] - (0.5 * (self.sizing_factor_x - 1) * self.size[0]), \
                self.pos[1] - (0.5 * (self.sizing_factor_y - 1) * self.size[1])

<BgColorLabel@Label+BackgroundColor>
    background_color: (0, 0, 0, 0)

<LoadingDataPopup>:
    opacity: 0
    background_color: (1, 1, 0, 1)
    title: "Please wait.   Loading all the titles ..."
    title_size: fm.loading_title_size
    title_font: fm.loading_title_font_name
    title_align: "left"
    title_color: (1,1,0.4,1)
    separator_color: (1, 0, 0, 0.0)
    separator_height: dp(4)
    size_hint: (1, 0.55)
    x: 0
    y: 0
    auto_dismiss: False
    mipmap: True

    BoxLayout:
        orientation: "vertical"

        Image:
            color: (1,1,1,1)
            opacity: 1.0
            texture: root.splash_image_texture
            size_hint: (1, 0.9)
            fit_mode: "cover"
            mipmap: True

        Label:
            text: "vertical filler"
            color: (0,0,0,0)
            size_hint: (1, 0.02)

        ProgressBar:
            id: loading_data_progress_bar
            size_hint: (1, 0.05)
            value: root.progress_bar_value
            min: 0
            max: 3

<MessagePopup>:
    background_color: (0,0,1,1)
    title: "USER SUPPLIED"
    title_size: fm.loading_title_size
    title_font: fm.loading_title_font_name
    title_align: "center"
    title_color: (1, 0, 0, 1)
    auto_dismiss: False
    size_hint: 0.9, 0.5

    BoxLayout:
        orientation: "vertical"

        Label:
            text: root.msg_text
            font_size: fm.error_popup_font_size
            background_color: (1, 1, 1, 1)
            multiline: True
            markup: True
            size: self.texture_size
            halign: 'justify'
            valign: 'middle'
            size_hint: 0.7, 0.9
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}

        BoxLayout:
            orientation: "horizontal"
            size_hint: 0.45, 0.20
            pos_hint: {'right': 1, 'top': 1}
            spacing: dp(10)
            padding: [dp(20),dp(20),dp(20),dp(20)]

            Button:
                disabled: not root.ok_text
                opacity: 0 if not root.ok_text else 1
                text: root.ok_text
                font_size: fm.error_popup_button_font_size
                text_size: self.size
                halign: 'center'
                valign: 'middle'
                bold: True
                on_press: root.ok()

            Button:
                text: root.cancel_text
                font_size: fm.error_popup_button_font_size
                text_size: self.size
                halign: 'center'
                valign: 'middle'
                on_press: root.cancel()

<MainScreen>:
    pos_hint: {"center_x": 0.5, "center_y": 0.5}

    BoxLayout:
        id: main_layout
        orientation: "vertical"

        # Use a FloatLayout to layer the interactive ActionBar on top of a draggable region.
        FloatLayout:
            size_hint_y: None
            height: root.ACTION_BAR_HEIGHT

            # A custom title bar using a FloatLayout to separate clickable and draggable regions.
            FloatLayout:
                id: action_bar
                pos_hint: {'x': 0, 'y': 0}
                size_hint: 1, 1
                canvas.before:
                    Color:
                        rgba: 0.12, 0.12, 0.12, 1  # Standard ActionBar background color
                    Rectangle:
                        pos: self.pos
                        size: self.size

                # --- 1. Clickable Title/Icon Area (Not Draggable) ---
                # Use a RelativeLayout to correctly position the child Image.
                RelativeLayout:
                    id: icon_container
                    # Position the icon button from the left edge.
                    pos_hint: {'x': dp(2) / root.width, 'center_y': 0.5}
                    size_hint: None, None
                    height: action_bar.height
                    width: dp(70)

                    Image:
                        source: root.app_icon_filepath
                        size_hint: None, None
                        # Make the image slightly smaller than its parent to create padding.
                        size: (self.parent.width - dp(8), self.parent.height - dp(8))
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        fit_mode: "contain"
                        mipmap: True
                        # Link the image's opacity to the button's state for press feedback.
                        opacity: 0.5 if icon_hitbox.state == 'down' else 1.0

                    # Add a transparent button on top to capture clicks.
                    Button:
                        id: icon_hitbox
                        size_hint: 1, 1
                        pos_hint: {'x': 0, 'y': 0}
                        background_color: (0, 0, 0, 0) # Transparent
                        on_release: root.goto_reader_icon_title()

                # --- 2. Draggable Title Area ---
                RelativeLayout:
                    id: draggable_title_bar
                    # Position this layout between the icon and the right-hand buttons.
                    pos_hint: {'x': (icon_container.width + dp(5)) / action_bar.width, 'center_y': 0.5}
                    size_hint: None, 1
                    width: right_buttons.x - icon_container.right
                    Label:
                        text: root.app_title
                        color: root.ACTION_BAR_TITLE_COLOR
                        markup: True
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

                # --- 3. Clickable Buttons Area (Not Draggable) ---
                BoxLayout:
                    id: right_buttons
                    pos_hint: {'right': 1, 'y': 0}
                    size_hint_x: None
                    width: self.minimum_width
                    padding: [dp(5), 0]

                    # A separator widget
                    Widget:
                        size_hint_x: None
                        width: dp(1)
                        canvas:
                            Color:
                                rgba: 0.3, 0.3, 0.3, 1
                            Rectangle:
                                pos: self.center_x, self.y
                                size: self.width, self.height

                    BoxLayout:
                        size_hint_x: None
                        width: self.minimum_width
                        spacing: dp(2)

                        BarButton:
                            text: 'Quit'
                            icon: str(sys_paths.get_barks_reader_close_icon_file())
                            important: True
                            on_release: app.close_app()

                        BarButton:
                            id: fullscreen_button
                            text: "Fullscreen"
                            icon: str(sys_paths.get_barks_reader_fullscreen_icon_file())
                            important: True
                            on_press: root.toggle_screen_mode()

                        BarButton:
                            text: 'Collapse'
                            icon: str(sys_paths.get_barks_reader_collapse_icon_file())
                            important: True
                            on_release: root.on_action_bar_collapse()

                        BarButton:
                            text: 'Change Pics'
                            icon: str(sys_paths.get_barks_reader_refresh_arrow_icon_file())
                            important: True
                            on_release: root.on_action_bar_change_view_images()

                        BarButton:
                            text: 'Settings'
                            icon: str(sys_paths.get_barks_reader_settings_icon_file())
                            important: True
                            on_release: app.open_settings(self)
