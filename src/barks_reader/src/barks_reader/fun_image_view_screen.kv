#: import ImageThemes barks_reader.background_views.ImageThemes

#:set fun_options_border_margin_x dp(2)
#:set fun_options_border_margin_y dp(1)

<FunImageViewScreen>:
    pos_hint: {'x': 0, 'y': 0}
    size_hint: 1, 1
    opacity: root.fun_view_opacity

    # Use a RelativeLayout to allow placing a button over the options box
    RelativeLayout:
        size_hint: 1, 1

        Image:
            color: root.fun_view_image_color
            source: root.fun_view_image_source
            fit_mode: root.fun_view_image_fit_mode
            mipmap: True

            # Goto title button
            Button:
                text: ""
                opacity: 1 if root.goto_title_button_active else 0
                disabled: not root.goto_title_button_active
                background_color: (1, 1, 1, 0)
                background_normal: ""
                x: self.parent.x + self.parent.width - (1.4 * root.UP_ARROW_WIDTH)
                y: self.parent.y + (0.4 * root.UP_ARROW_WIDTH)
                size: (root.UP_ARROW_WIDTH, root.UP_ARROW_WIDTH)
                halign: "left"
                valign: "top"
                text_size: (self.width, self.height)
                on_press: root.on_goto_title()

                canvas.before:
                    Color:
                        rgba: .1, .1, .1, 1
                    BoxShadow:
                        inset: False
                        pos: self.pos
                        size: self.size
                        offset: 0, 0
                        spread_radius: 3.5, 3.5
                        border_radius: 50, 50, 50, 50
                        blur_radius: 2
                Image:
                    source: root.up_arrow_filepath
                    color: (1, 1, 1, 1)
                    y: self.parent.y
                    x: self.parent.x
                    size: self.parent.size
                    fit_mode: "contain"
                    mipmap: True

        # --- Main container for the fun view image options menu ---
        BoxLayout:
            id: image_type_option_box
            orientation: 'vertical'
            size_hint: 0.5, 1
            pos_hint: {'x': 0.0, 'top': 1}
            # Indent this box
            padding: [dp(2 + fun_options_border_margin_x), dp(30), dp(2), dp(30)]
            spacing: dp(8)
            check_box_height: dp(25)
            opacity: 1 if root.fun_view_options_enabled else 0
            disabled: not root.fun_view_options_enabled

            canvas.before:
                # Add a rounded rectangle background box
                Color:
                    rgba: 0.05, 0.05, 0.05, 0.8
                RoundedRectangle:
                    pos: (self.x + fun_options_border_margin_x, self.y + fun_options_border_margin_y)
                    size: (self.width, self.height - (2 * fun_options_border_margin_y))
                    radius: [dp(10)]
                # Add a rounded rectangle border line
                Color:
                    rgba: 0.5, 0.5, 0.5, 1
                Line:
                    width: 1.5
                    rounded_rectangle:
                        (self.x + fun_options_border_margin_x, self.y + fun_options_border_margin_y,
                        self.width, self.height - (2 * fun_options_border_margin_y),
                        dp(10))

            # --- The options heading ---
            BgColorLabel:
                id: heading_label
                text: 'Select Bottom View Image Types'
                color: (1.0, 1.0, 0.0, 1)
                background_color: (0.1, 0.1, 0.1, 1)
                bold: True
                size_hint_y: None
                height: self.texture_size[1] + dp(12)  # Add vertical padding to height
                text_size: self.width, None
                halign: 'center'
                valign: 'middle'

            # --- 'All' Radio Button ---
            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                height: image_type_option_box.check_box_height
                # Indent this box
                padding: [dp(30), 0, dp(30), 0]
                spacing: dp(10)

                CheckBox:
                    id: checkbox_all_image_types
                    group: "image_type_group"
                    size_hint_x: None
                    width: image_type_option_box.check_box_height
                    active: True
                Label:
                    text: 'All'
                    bold: True
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'

            # --- 'Custom' Radio Button ---
            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                height: image_type_option_box.check_box_height
                # Indent this box
                padding: [dp(30), 0, dp(30), 0]
                spacing: dp(10)

                CheckBox:
                    id: checkbox_custom_image_types
                    group: "image_type_group"
                    size_hint_x: None
                    width: image_type_option_box.check_box_height
                Label:
                    text: 'Custom'
                    bold: True
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'

            # --- Indented Custom Options Box ---
            BoxLayout:
                id: custom_options_box
                orientation: 'vertical'
                size_hint_y: None
                height: self.minimum_height
                # Indent this box
                padding: [dp(30) + dp(40), 0, dp(30), 0]
                spacing: dp(10)
                disabled: not checkbox_custom_image_types.active

                CheckBoxRow:
                    id: check_box_ai_image_type
                    label_text: 'AI'
                    theme_enum: ImageThemes.AI
                CheckBoxRow:
                    id: check_box_bw_image_type
                    label_text: "Black and White"
                    theme_enum: ImageThemes.BLACK_AND_WHITE
                CheckBoxRow:
                    id: check_box_censorship_image_type
                    label_text: "Censorship"
                    theme_enum: ImageThemes.CENSORSHIP
                CheckBoxRow:
                    id: check_box_classics_image_type
                    label_text: "Classics"
                    theme_enum: ImageThemes.CLASSICS
                CheckBoxRow:
                    id: check_box_faves_image_type
                    label_text: 'Faves'
                    theme_enum: ImageThemes.FAVOURITES
                CheckBoxRow:
                    id: check_box_insets_image_type
                    label_text: "Insets"
                    theme_enum: ImageThemes.INSETS
                CheckBoxRow:
                    id: check_box_silhouettes_image_type
                    label_text: "Silhouettes"
                    theme_enum: ImageThemes.SILHOUETTES
                CheckBoxRow:
                    id: check_box_splash_image_type
                    label_text: 'Splash'
                    theme_enum: ImageThemes.SPLASHES
                CheckBoxRow:
                    id: check_box_40s_image_type
                    label_text: "40's"
                    theme_enum: ImageThemes.FORTIES
                CheckBoxRow:
                    id: check_box_50s_image_type
                    label_text: "50's"
                    theme_enum: ImageThemes.FIFTIES
                CheckBoxRow:
                    id: check_box_60s_image_type
                    label_text: "60's"
                    theme_enum: ImageThemes.SIXTIES

            # Spacer to stop BoxLayout centering the above widgets.
            Widget:

        Button:
            id: fun_view_options_button
            text: 'X' if root.fun_view_options_enabled else ' '
            pos_hint: {'x': 0.015, 'top': 0.985}
            size_hint: None, None
            size: dp(15), dp(15)
            font_size: sp(15)
            bold: True
            background_color: (0, 0, 0, 0) # Make default background transparent
            background_normal: ''
            canvas.before:
                Color:
                    rgba: (0.8, 0.1, 0.1, 1) if root.fun_view_options_enabled else (1, 1, 1, 1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [self.height / 2] # Make it a perfect circle

            on_press: root.view_options_button_pressed()
            opacity: 1 if root.fun_view_options_enabled else 0.3

            Image:
                source: "/home/greg/Books/Carl Barks/Compleat Barks Disney Reader/Reader Icons/ActionBar Icons/menu-icon.png"
                background_color: (0, 0, 0, 0) # Make default background transparent
                opacity: 0 if root.fun_view_options_enabled else 0.5
                y: self.parent.y
                x: self.parent.x
                size: self.parent.size
                fit_mode: "scale-down"
                mipmap: True

        Button:
            text: 'clear\nall'
            pos: checkbox_custom_image_types.x, custom_options_box.y + custom_options_box.height - self.height - dp(1)
            size_hint: None, None
            size: dp(35), dp(30)
            font_size: sp(10)
            bold: True
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            background_color: (0, 0, 0, 0) # Make default background transparent
            background_normal: ''
            canvas.before:
                Color:
                    rgba: (0.0, 0.5, 0.5, 0.5) if self.state == 'normal' else (0.0, 0.1, 0.1, 1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [dp(5)]

            on_press: root.view_options_clear_all_button_pressed()
            opacity: 1 if root.fun_view_options_enabled else 0
            disabled: not checkbox_custom_image_types.active
